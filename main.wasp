app Vehiclecontroll {
  wasp: {
    version: "^0.11.1"
  },
  title: "Vehiclecontroll",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id             Int         @id @default(autoincrement())
    username       String      @unique
    password       String
    drivingLicense Boolean
    education      String
    registration   String
    vehicles       Vehicle[]
    equipments     Equipment[]
psl=}

entity Vehicle {=psl
    id              Int     @id @default(autoincrement())
    tires           Boolean
    lightFront      Boolean
    lightBack       Boolean
    sideMirror      Boolean
    logoOnSides     Boolean
    logoOnFrontDoor Boolean
    logoOnFront     Boolean
    logoOnBack      Boolean
    user            User    @relation(fields: [userId], references: [id])
    userId          Int
psl=}

entity Equipment {=psl
    id            Int     @id @default(autoincrement())
    ADR           Boolean
    safetyWest    Boolean
    safetyGlasses Boolean
    safetyGloves  Boolean
    safetyShoes   Boolean
    palletJack    Boolean
    uniform       Boolean
    user          User    @relation(fields: [userId], references: [id])
    userId        Int
psl=}

action createUser {
  fn: import { createUser } from "@server/actions.js",
  entities: [User]
}

action updateVehicle {
  fn: import { updateVehicle } from "@server/actions.js",
  entities: [Vehicle]
}

action updateEquipment {
  fn: import { updateEquipment } from "@server/actions.js",
  entities: [Equipment]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User, Vehicle, Equipment]
}

query getVehicle {
  fn: import { getVehicle } from "@server/queries.js",
  entities: [Vehicle]
}

query getEquipment {
  fn: import { getEquipment } from "@server/queries.js",
  entities: [Equipment]
}

route DriverRegistrationRoute { path: "/driver-registration", to: DriverRegistrationPage }
page DriverRegistrationPage {
  component: import { DriverRegistration } from "@client/pages/DriverRegistration.jsx",
  authRequired: false
}

route VehicleCheckRoute { path: "/vehicle-check", to: VehicleCheckPage }
page VehicleCheckPage {
  component: import { VehicleCheck } from "@client/pages/VehicleCheck.jsx",
  authRequired: true
}

route EquipmentCheckRoute { path: "/equipment-check", to: EquipmentCheckPage }
page EquipmentCheckPage {
  component: import { EquipmentCheck } from "@client/pages/EquipmentCheck.jsx",
  authRequired: true
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/pages/Dashboard.jsx",
  authRequired: true
}
